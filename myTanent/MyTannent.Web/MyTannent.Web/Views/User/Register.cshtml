@model MyTannent.Web.ViewModel.UserViewModel

@{
    ViewBag.Title = "Register";
    Layout = "~/Views/Shared/_LayoutHome.cshtml";

}
<style>
    .well {
        /*overflow-y:scroll;
    max-height:100%;*/
    }

    .bk-light {
        /*background-color: #EFD;*/
    }

    .noteText {
        font-style: italic;
        font-size: x-small;
    }
</style>

<div class="login-page bk-img" style="background-image: url(../Content/img/Houseing1.jpg);">

    <div class="form-content">
        <div class="container">
            <div class="row">
                <div class="col-md-6 col-md-offset-3">
                    <h3 class="text-center text-bold text-light mt-4x">Register User</h3>
                    <div class="well row pt-2x bk-light">
                        @*pb-3x*@
                        <div class="col-md-8 col-md-offset-2">

                            @using (Html.BeginForm())
                            {
                                @Html.ValidationSummary(true)
                                @Html.HiddenFor(model => model.UserType)
                    
                                @Html.LabelFor(model => model.Firstname, new { @class = "text-uppercase text-sm" })
                                @Html.TextBoxFor(model => model.Firstname, new { @class = "form-control mb txtutype", @placeholder = "Enter your first name" })
                                @Html.ValidationMessageFor(model => model.Firstname)
                           
                            
@*   @Html.LabelFor(model => model.Lastname, new { @class = "text-uppercase text-sm" })                         
                                @Html.TextBoxFor(model => model.Lastname, new { @class = "form-control mb" })
                                @Html.ValidationMessageFor(model => model.Lastname)
                                 *@

                            
                                @Html.LabelFor(model => model.Mobile1, new { @class = "text-uppercase text-sm" }) <span class="noteText">(Mobile Number will be your <b>Username</b>)</span>
                                @Html.TextBoxFor(model => model.Mobile1, new { @class = "form-control mb txtutype", @placeholder = "Enter your primary mobile number" })
                                @Html.ValidationMessageFor(model => model.Mobile1)

                            
@*   @Html.LabelFor(model => model.Mobile2, new { @class = "text-uppercase text-sm" })
                                @Html.TextBoxFor(model => model.Mobile2, new { @class = "form-control mb" })
                                @Html.ValidationMessageFor(model => model.Mobile2)
                            
                            
                                @Html.LabelFor(model => model.EmailId, new { @class = "text-uppercase text-sm" })
                                @Html.TextBoxFor(model => model.EmailId, new { @class = "form-control mb" })
                                @Html.ValidationMessageFor(model => model.EmailId)
                            
                            
                                @Html.LabelFor(model => model.UserId, new { @class = "text-uppercase text-sm" })                            
                                @Html.TextBoxFor(model => model.UserId, new { @class = "form-control mb" })
                                @Html.ValidationMessageFor(model => model.UserId)
                             *@
                            
                                @Html.LabelFor(model => model.password, new { @class = "text-uppercase text-sm" })                            
                                @Html.TextBoxFor(model => model.password, new { @class = "form-control mb txtutype", @placeholder = "Enter your password" })
                                @Html.ValidationMessageFor(model => model.password)

                                @Html.LabelFor(model => model.ConfirmPassword, new { @class = "text-uppercase text-sm" })                            
                                @Html.TextBoxFor(model => model.ConfirmPassword, new { @class = "form-control mb txtutype", @placeholder = "Confirm your password" })
                                @Html.ValidationMessageFor(model => model.ConfirmPassword)

@*   
            @Html.LabelFor(model => model.UserType)
        </div>
        
            @Html.TextBoxFor(model => model.UserType)
            @Html.ValidationMessageFor(model => model.UserType)
        </div>

                            
                                @Html.LabelFor(model => model.Country, new { @class = "text-uppercase text-sm" })                            
                                @Html.TextBoxFor(model => model.Country, new { @class = "form-control mb" })
                                @Html.ValidationMessageFor(model => model.Country)

                            
                                @Html.LabelFor(model => model.State, new { @class = "text-uppercase text-sm" })                            
                                @Html.TextBoxFor(model => model.State, new { @class = "form-control mb" })
                                @Html.ValidationMessageFor(model => model.State)

                            
                                @Html.LabelFor(model => model.City, new { @class = "text-uppercase text-sm" })
                                @Html.TextBoxFor(model => model.City, new { @class = "form-control mb" })
                                @Html.ValidationMessageFor(model => model.City)

                            
                                @Html.LabelFor(model => model.Locality, new { @class = "text-uppercase text-sm" })                            
                                @Html.TextBoxFor(model => model.Locality, new { @class = "form-control mb" })
                                @Html.ValidationMessageFor(model => model.Locality)
                            *@
@*        
            @Html.LabelFor(model => model.PermanentAddress)
        </div>
        
            @Html.TextBoxFor(model => model.PermanentAddress)
            @Html.ValidationMessageFor(model => model.PermanentAddress)
        </div>*@
@* 
                            
                                @Html.LabelFor(model => model.UserPhoto, new { @class = "text-uppercase text-sm" })                            
                                @Html.TextBoxFor(model => model.UserPhoto, new { @class = "form-control mb" })
                                @Html.ValidationMessageFor(model => model.UserPhoto)


            @Html.LabelFor(model => model.AllotedRoomNo)
        </div>
        
            @Html.TextBoxFor(model => model.AllotedRoomNo)
            @Html.ValidationMessageFor(model => model.AllotedRoomNo)
        </div>*@

                                <p>
                                    <input type="submit" value="Save" class="btn btn-primary btn-block" />
                                </p>

                            }

                        </div>
                    </div>

                </div>
            </div>
        </div>
    </div>
</div>

<!-- Modal -->
<div id="myModal" class="modal fade" role="dialog">
    <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Select your Option</h4>
            </div>
            <div class="modal-body">
                @Html.LabelFor(model => model.UserType, new { @class = "text-uppercase text-sm" })
                @Html.DropDownList("UserTypeddl", ViewData["ddlUserType"] as List<SelectListItem>, new { @onchange = "GetValue(this.value)", @class = "form-control mb" })
                @Html.ValidationMessageFor(model => model.UserType)
            </div>
            <div class="modal-footer">
                @*                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>*@
                <button type="button" id="btnpopupsave" class="btn btn-primary">Save</button>
            </div>
        </div>

    </div>
</div>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.12.0/jquery.min.js"></script>
<script src="http://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/js/bootstrap.min.js"></script>


<script>
    $(document).ready(function () {
        $(".txtutype").keydown(function (event) {
            debugger;
            var usertype = document.getElementById("UserType").value;
            if (usertype == "") {
                $("#Firstname").val("");
                $("#Mobile1").val("");
                $("#password").val("");
                $("#ConfirmPassword").val("");

                $('#myModal').modal({
                    backdrop: 'static'
                })

                alert("Please Select User Type.");
            }
        });
    });


    $(window).load(function () {
        //  $('#myModal').modal('show');
        $('#myModal').modal({
            backdrop: 'static'
        })
    });

    function GetValue(val) {
        debugger;
        // $("#UserType").val(val);
        document.getElementById("UserType").value = val;
    }

    $("#btnpopupsave").click(function () {
        var usertype = document.getElementById("UserType").value;
        if (usertype == "") {
            alert("Please Select User Type.");
        } else {

            $('#myModal').modal('hide');
        }
    });
</script>

@*@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}*@
